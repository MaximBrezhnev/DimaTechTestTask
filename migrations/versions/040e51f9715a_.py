"""empty message

Revision ID: 040e51f9715a
Revises:
Create Date: 2024-07-21 13:45:26.062855

"""
from typing import Sequence
from typing import Union

import sqlalchemy as sa
from alembic import op
from sqlalchemy import Boolean
from sqlalchemy import column
from sqlalchemy import Float
from sqlalchemy import Integer
from sqlalchemy import String
from sqlalchemy import table

# revision identifiers, used by Alembic.
revision: str = "040e51f9715a"
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "user",
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.Column("email", sa.String(), nullable=False),
        sa.Column("is_admin", sa.Boolean(), nullable=False),
        sa.Column("full_name", sa.String(), nullable=False),
        sa.Column("hashed_password", sa.String(), nullable=False),
        sa.PrimaryKeyConstraint("user_id"),
        sa.UniqueConstraint("email"),
    )
    op.create_table(
        "account",
        sa.Column("account_id", sa.Integer(), nullable=False),
        sa.Column("balance", sa.Float(), nullable=False),
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["user.user_id"],
        ),
        sa.PrimaryKeyConstraint("account_id"),
    )
    op.create_table(
        "payment",
        sa.Column("payment_id", sa.Integer(), nullable=False),
        sa.Column("transaction_id", sa.Uuid(), nullable=False),
        sa.Column("amount", sa.Float(), nullable=False),
        sa.Column("account_id", sa.Integer(), nullable=False),
        sa.Column("signature", sa.String(), nullable=False),
        sa.ForeignKeyConstraint(
            ["account_id"],
            ["account.account_id"],
        ),
        sa.PrimaryKeyConstraint("payment_id"),
        sa.UniqueConstraint("transaction_id"),
    )

    # Вставка тестовых данных в таблицы
    test_user_hashed_password = (
        "$2b$12$/.hMIOUOcrhoC6TTG5OSb.UrrkwBaAuCNOaxEpEUd4iOTPf2mhV02"
    )
    test_admin_hashed_password = (
        "$2b$12$/.hMIOUOcrhoC6TTG5OSb.UrrkwBaAuCNOaxEpEUd4iOTPf2mhV02"
    )

    user_table = table(
        "user",
        column("user_id", Integer),
        column("email", String),
        column("is_admin", Boolean),
        column("full_name", String),
        column("hashed_password", String),
    )

    account_table = table(
        "account",
        column("account_id", Integer),
        column("balance", Float),
        column("user_id", Integer),
    )

    op.bulk_insert(
        user_table,
        [
            {
                "user_id": 1,
                "email": "user@example.com",
                "is_admin": False,
                "full_name": "Иван Иванов",
                "hashed_password": test_user_hashed_password,
            },
            {
                "user_id": 2,
                "email": "admin@example.com",
                "is_admin": True,
                "full_name": "Петр Петров",
                "hashed_password": test_admin_hashed_password,
            },
        ],
    )

    op.bulk_insert(
        account_table,
        [
            {"account_id": 1, "balance": 0, "user_id": 1},
        ],
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("payment")
    op.drop_table("account")
    op.drop_table("user")
    # ### end Alembic commands ###
